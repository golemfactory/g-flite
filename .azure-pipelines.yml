name: $(Build.SourceBranch)-$(date:yyyyMMdd)$(rev:.r)
trigger:
  branches:
    include:
    - 'master'
  tags:
    include:
    - '*'

jobs:
- job: Build
  strategy:
    matrix:
      windows-stable:
        imageName: 'vs2017-win2016'
        rustup_toolchain: stable
      linux-stable:
        imageName: 'ubuntu-16.04'
        rustup_toolchain: stable
      mac-stable:
        imageName: 'macos-10.14'
        rustup_toolchain: stable

  pool:
    vmImage: $(imageName)

  steps:
    - checkout: self

    - powershell: |
        Write-Host "##vso[task.setvariable variable=VCPKG_ROOT;]$env:VCPKG_INSTALLATION_ROOT"
        Write-Host "##vso[task.setvariable variable=VCPKGRS_DYNAMIC;]1"
      displayName: Set VCPKG variables (Win)
      condition: eq( variables['Agent.OS'], 'Windows_NT' )

    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
        export PATH=$PATH:$HOME/.cargo/bin
        rustup update $RUSTUP_TOOLCHAIN
        rustup default $RUSTUP_TOOLCHAIN
        rustc --version
      displayName: Install rust (*nix)
      condition: ne( variables['Agent.OS'], 'Windows_NT' )

    - script: |
        rustup update %RUSTUP_TOOLCHAIN%
        rustup default %RUSTUP_TOOLCHAIN%
        rustc --version
      displayName: Install rust (Win)
      condition: eq( variables['Agent.OS'], 'Windows_NT' )

    - script: |
        vcpkg search openssl
        vcpkg install openssl:x64-windows
        vcpkg list
      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      displayName: Install openssl (Win)

    - script: cargo fetch
      displayName: Fetch cargo dependencies

    - script: |
        rustup component add rustfmt
        rustup component list
        cargo fmt --all -- --check
      condition: eq( variables['rustup_toolchain'], 'stable' )
      displayName: Check formatting

    - script: cargo build --release --features openssl_vendored
      displayName: Cargo build release (*nix)
      condition: ne( variables['Agent.OS'], 'Windows_NT' )

    - script: cargo build --release
      displayName: Cargo build release (Win)
      condition: eq( variables['Agent.OS'], 'Windows_NT' )

    - script: cargo build
      displayName: Cargo build

    - bash: RUST_BACKTRACE=1 cargo test --all
      displayName: Cargo test

    - bash: |
        MY_TAG="$(Build.SourceBranch)"
        MY_TAG=${MY_TAG#refs/tags/}
        echo $MY_TAG
        echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
      displayName: Create tag variable

    - task: CopyFiles@2
      displayName: Copy assets
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)/target/release'
        contents: |
          g_flite
        targetFolder: '$(Build.BinariesDirectory)/g-flite'

    - task: ArchiveFiles@2
      displayName: Gather assets (*nix)
      condition: ne( variables['Agent.OS'], 'Windows_NT' )
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/g-flite'
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/g-flite-$(build.my_tag).tar.gz'

    - task: ArchiveFiles@2
      displayName: Gather assets (Win)
      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)/g-flite'
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/g-flite-$(build.my_tag).zip'

    - task: GithubRelease@0
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
      inputs:
        gitHubConnection: azure-release
        repositoryName: golemfactory/g-flite
        action: 'edit'
        target: '$(build.sourceVersion)'
        tagSource: 'manual'
        tag: '$(build.my_tag)'
        assets: |
          - '$(Build.ArtifactStagingDirectory)/g-flite-$(build.my_tag).tar.gz'
          - '$(Build.ArtifactStagingDirectory)/g-flite-$(build.my_tag).zip'
        title: 'g-flite-$(build.my_tag)'
        assetUploadMode: 'replace'
        addChangeLog: true

